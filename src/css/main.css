@import url('https://fonts.googleapis.com/css2?family=Azeret+Mono:ital,wght@0,400;0,500;1,400;1,500&family=DM+Mono:ital,wght@0,400;0,500;1,400;1,500&display=swap')
layer(base);

@import 'tailwindcss';
@plugin '@tailwindcss/typography';

@theme {
    --font-body: var(--theme-font-body, monospace);
    --background-color-main: var(--theme-dark);
    --background-color-inverse: var(--theme-on-dark);
    --text-color-main: var(--theme-on-dark);
    --text-color-inverse: var(--theme-dark);
    --container-8xl: 96rem;
    --spacing-icon: 1em;
}

@layer base {
    html {
        @apply antialiased font-body;
    }
    body {
        @apply flex flex-col min-h-screen;
    }
    body > div {
        @apply flex flex-col grow;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        @apply break-words;
        line-height: 1.15;
        font-weight: var(--theme-heading-weight);
        text-transform: var(--theme-heading-case);
    }

    b,
    strong {
        @apply font-medium;
    }

    select {
        @apply bg-no-repeat appearance-none cursor-pointer;
        background-image:
            linear-gradient(45deg, transparent 50%, currentColor 0),
            linear-gradient(135deg, currentColor 50%, transparent 0);
        background-position:
            calc(100% - 18px) calc(1px + 50%),
            calc(100% - 12px) calc(1px + 50%);
        background-size:
            6px 6px,
            6px 6px;
    }
    option {
        color: initial;
    }

    /* Color themes */
    :where([data-theme='colors-b']) {
        --background-color-main: var(--theme-light);
        --background-color-inverse: var(--theme-on-light);
        --text-color-main: var(--theme-on-light);
        --text-color-inverse: var(--theme-light);
    }
    :where([data-theme='colors-c']) {
        --background-color-main: var(--theme-primary);
        --background-color-inverse: var(--theme-on-primary);
        --text-color-main: var(--theme-on-primary);
        --text-color-inverse: var(--theme-primary);
    }
    :where([data-theme='colors-d']) {
        --background-color-main: var(--theme-secondary);
        --background-color-inverse: var(--theme-on-secondary);
        --text-color-main: var(--theme-on-secondary);
        --text-color-inverse: var(--theme-secondary);
    }
    :where([data-theme='colors-e']) {
        --background-color-main: var(--theme-complementary);
        --background-color-inverse: var(--theme-on-complementary);
        --text-color-main: var(--theme-on-complementary);
        --text-color-inverse: var(--theme-complementary);
    }
    :where([data-theme^='colors-']):not([data-theme='colors-f']) {
        @apply bg-main text-main;
    }

    /* Fixing issues caused by data wrapper added via auto annotations */
    form data:has([class*='sm:col-span-2']) {
        @apply sm:col-span-2;
    }
    nav data:has([class*='sm:col-start-2']) {
        @apply sm:col-start-2;
    }
    li data:has([class*='link-fill']) {
        @apply inline-flex;
    }
}

@layer utilities {
    .prose {
        --tw-prose-body: var(--text-color-main);
        --tw-prose-headings: var(--text-color-main);
        --tw-prose-lead: var(--text-color-main);
        --tw-prose-links: var(--text-color-main);
        --tw-prose-bold: var(--text-color-main);
        --tw-prose-counters: var(--text-color-main);
        --tw-prose-bullets: var(--text-color-main);
        --tw-prose-hr: var(--text-color-main);
        --tw-prose-quotes: var(--text-color-main);
        --tw-prose-quote-borders: var(--text-color-main);
        --tw-prose-captions: var(--text-color-main);
        --tw-prose-kbd: var(--text-color-main);
        --tw-prose-kbd-shadows: from var(--text-color-main) r g b;
        --tw-prose-code: var(--text-color-main);
        --tw-prose-pre-code: var(--text-color-inverse);
        --tw-prose-pre-bg: var(--background-color-inverse);
        --tw-prose-th-borders: var(--text-color-main);
        --tw-prose-td-borders: var(--text-color-main);

        a {
            @apply underline font-normal;
        }

        a:hover {
            @apply no-underline;
        }

        :where(h1, h2, h3, h4, h5, h6) {
            font-weight: var(--theme-heading-weight);
            line-height: 1.15;
        }

        blockquote p:first-of-type::before,
        blockquote p:last-of-type::after {
            content: none;
        }
    }
}

@utility bottom-shadow-* {
    box-shadow: 0 calc(--value(integer) * 1px) 0 0 currentColor;
}

@utility link-fill {
    @apply transition-all text-main;
    background-image: linear-gradient(
        to bottom,
        var(--background-color-inverse) 0%,
        var(--background-color-inverse) 100%
    );
    background-size: 100% 0%;
    background-repeat: no-repeat;

    &:hover {
        @apply text-inverse;
        background-size: 100% 100%;
    }
}
